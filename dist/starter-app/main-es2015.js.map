{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/add-entries/add-entries.component.html","./src/app/app.component.html","./src/app/edit/edit.component.html","./src/app/home/home.component.html","./src/app/login-guest/login-guest.component.html","./src/app/register-guest/register-guest.component.html","./src/app/view-entries/view-entries.component.html","./src/app/add-entries/add-entries.component.css","./src/app/add-entries/add-entries.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/edit/edit.component.css","./src/app/edit/edit.component.ts","./src/app/entries.service.ts","./src/app/home/home.component.css","./src/app/home/home.component.ts","./src/app/login-guest/login-guest.component.css","./src/app/login-guest/login-guest.component.ts","./src/app/login.service.ts","./src/app/model/Login.ts","./src/app/model/User.ts","./src/app/model/UserEntries.ts","./src/app/register-guest/register-guest.component.css","./src/app/register-guest/register-guest.component.ts","./src/app/view-entries/view-entries.component.css","./src/app/view-entries/view-entries.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div>\\n<table>\\n<tr>\\n    <td>entry type </td>\\n <td>   \\n<div>\\n<select name=\\\"my-select\\\" (change)=\\\"selectChange($event)\\\">\\n    <option [value]=\\\"0\\\" >\\n        select....\\n    </option>\\n    <option [value]=\\\"1\\\" >\\n        text\\n    </option>\\n    <option [value]=\\\"2\\\" >\\n        image\\n    </option>\\n</select>\\n</div>\\n</td></tr>\\n<tr><td>\\n<div *ngIf=\\\"isText\\\">\\n    enter text for entries\\n</div>\\n</td>\\n<td>\\n    <div *ngIf=\\\"isText\\\">\\n      <input type=\\\"textArea\\\" name=\\\"feedback\\\" [(ngModel)]=\\\"userEntries.feedback\\\"/>\\n    </div>\\n    </td>\\n</tr><tr>\\n    <td>\\n<div *ngIf=\\\"isImage\\\">\\n    upload file\\n\\n</div>\\n</td>\\n<td>\\n    <div *ngIf=\\\"isImage\\\">\\n      \\n    <input type=\\\"file\\\" (change)=\\\"selectFile($event)\\\"/>\\n    <input type=\\\"hidden\\\" name=\\\"imgurl\\\" [(ngModel)]=\\\"userEntries.imgurl\\\"/>\\n    </div>\\n    </td>\\n    </tr>\\n</table>\\n<div>\\n<input type=\\\"button\\\" value=\\\"add entries\\\"(click)=save()/>\\n</div>\\n</div>\\n\"","module.exports = \"<app-home></app-home>\"","module.exports = \"<p>edit works!</p>\\n\\n<div>\\n    <table>\\n    <tr>\\n        <td>entry type </td>\\n     <td>   \\n    <div>\\n    <select name=\\\"my-select\\\" (change)=\\\"selectChange($event)\\\">\\n        <option [value]=\\\"0\\\" >\\n            select....\\n        </option>\\n        <option [value]=\\\"1\\\" >\\n            text\\n        </option>\\n        <option [value]=\\\"2\\\" >\\n            image\\n        </option>\\n    </select>\\n    </div>\\n    </td></tr>\\n    <tr><td>\\n    <div *ngIf=\\\"isText\\\">\\n        enter text for entries\\n    </div>\\n    </td>\\n    <td>\\n        <div *ngIf=\\\"isText\\\">\\n          <input type=\\\"textArea\\\" name=\\\"feedback\\\" [(ngModel)]=\\\"usersEntriesEdit.feedback\\\"/>\\n        </div>\\n        </td>\\n    </tr><tr>\\n        <td>\\n    <div *ngIf=\\\"isImage\\\">\\n        upload file\\n    \\n    </div>\\n    </td>\\n    <td>\\n        <div *ngIf=\\\"isImage\\\">\\n          \\n        <input type=\\\"file\\\"/>\\n        <input type=\\\"hidden\\\" name=\\\"imgurl\\\" [(ngModel)]=\\\"usersEntriesEdit.imgurl\\\"/>\\n        </div>\\n        </td>\\n        </tr>\\n    </table>\\n    <div>\\n    <input type=\\\"button\\\" value=\\\"update entries\\\"(click)=save()/>\\n    </div>\\n    </div>\\n    \"","module.exports = \"<p>Guest Book App</p>\\n\\n<router-outlet></router-outlet>\\n\\n<p>\\\"\\\"</p>\\n\\n<!--\\n<app-register-guest></app-register-guest>\\n<app-login-guest></app-login-guest>\\n<app-add-entries></app-add-entries>\\n<app-view-entries></app-view-entries>\\n-->\"","module.exports = \"<form name=\\\"form\\\"  (ngSubmit)=\\\"onSubmit(f1)\\\" ngNativeValidate>\\n<div class=\\\"mb-3 row\\\">\\n    <label for=\\\"userName\\\" class=\\\"col-sm-2 col-form-label\\\">username</label>\\n    <div class=\\\"col-sm-10\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"userName\\\" value=\\\"\\\" name=\\\"login.name\\\" [(ngModel)]=\\\"login.name\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"mb-3 row\\\">\\n    <label for=\\\"userPassword\\\" class=\\\"col-sm-2 col-form-label\\\">Password</label>\\n    <div class=\\\"col-sm-10\\\">\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"userPassword\\\" name=\\\"login.password\\\" [(ngModel)]=\\\"login.password\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"mb-3 row\\\">\\n    <div class=\\\"col-sm-10\\\">\\n      <input type=\\\"submit\\\" name=\\\"submit\\\" value=\\\"Login\\\" class=\\\"btn-login-box\\\" (click)=\\\"onSubmit()\\\">\\n      </div>\\n  </div>\\n\\n  </form>\\n  <a class=\\\"nav-link\\\" routerLink=\\\"#\\\" (click)=\\\"go()\\\">Register as New User</a>\\n  \"","module.exports = \"<form name=\\\"form\\\">\\n<div class=\\\"mb-3 row\\\">\\n    <label for=\\\"userName\\\" class=\\\"col-sm-2 col-form-label\\\">username</label>\\n    <div class=\\\"col-sm-10\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"userName\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.userName\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"mb-3 row\\\">\\n    <label for=\\\"userPassword\\\" class=\\\"col-sm-2 col-form-label\\\">Password</label>\\n    <div class=\\\"col-sm-10\\\">\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"userPassword\\\"  name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"mb-3 row\\\">\\n    <label for=\\\"userRole\\\" class=\\\"col-sm-2 col-form-label\\\">Role</label>\\n    <div class=\\\"col-sm-10\\\">\\n        <select name=\\\"my-role\\\" (change)=\\\"selectChange($event)\\\">\\n            <option [value]=\\\"0\\\" >\\n                select....\\n            </option>\\n            <option [value]=\\\"1\\\" >\\n                Admin\\n            </option>\\n            <option [value]=\\\"2\\\" >\\n                User\\n            </option>\\n        </select>\\n        \\n    </div>\\n  </div>\\n  <div class=\\\"mb-3 row\\\">\\n    <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"submit\\\" name=\\\"submit\\\" value=\\\"Register as new user\\\" class=\\\"btn-login-box\\\" (click)=\\\"onSubmit()\\\">\\n        </div>\\n  </div>\\n</form>\\n   <a class=\\\"nav-link\\\" routerLink=\\\"#\\\" (click)=\\\"goToLoggin()\\\"> login page </a>\"","module.exports = \"<div class=\\\"container\\\">List of entries\\n    <div class=\\\"row row-cols-1 row-cols-sm-2 row-cols-md-5\\\">\\n     <div class=\\\"col\\\" >s.no</div>\\n      <div class=\\\"col\\\">text</div>\\n      <div class=\\\"col\\\" >image</div>\\n      <div class=\\\"col\\\" >approved</div>\\n      <div class=\\\"col\\\" >Action</div>\\n      </div>\\n      <div class=\\\"row row-cols-1 row-cols-sm-2 row-cols-md-5\\\"  *ngFor=\\\"let entries of usersEntriesList\\\">\\n         <div class=\\\"col\\\" >{{entries.id}}</div>\\n          <div class=\\\"col\\\">{{entries.feedback}}</div>\\n            <div class=\\\"col\\\" ><a class=\\\"nav-link\\\" routerLink=\\\"#\\\" (click)=downloadfile(entries.imgurl)>{{entries.imgurl}}</a>\\n          </div>\\n            <div class=\\\"col\\\"  *ngIf=\\\"entries.isApprove;else elseNotDone\\\"> yes</div>\\n            <ng-template #elseNotDone>\\n              not\\n            </ng-template>\\n            <div class=\\\"col\\\" >\\n                  <table>\\n                    <tr>\\n                      <td><a class=\\\"nav-link\\\" routerLink=\\\"#\\\" (click)=approve(entries.id)>Approve </a></td>\\n                      <td><a class=\\\"nav-link\\\" routerLink=\\\"#\\\" (click)=Edit(entries.id)>Edit </a></td>\\n                      <td><a class=\\\"nav-link\\\" routerLink=\\\"#\\\" (click)=Delete(entries.id)>Delete</a></td>\\n                    </tr>\\n                  </table>\\n                </div>\\n              </div>\\n      <input type=\\\"button\\\" value=\\\"add new entries\\\" (click)=\\\"go()\\\">\\n    </div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1lbnRyaWVzL2FkZC1lbnRyaWVzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EntriesService } from '../entries.service';\nimport { UserEntries } from '../model/UserEntries';\n\n@Component({\n  selector: 'app-add-entries',\n  templateUrl: './add-entries.component.html',\n  styleUrls: ['./add-entries.component.css']\n})\nexport class AddEntriesComponent implements OnInit {\n  isText = false;\n  isImage = false;\n  myEntries = \"1\";\n  entriesType:any;\n  currentFileUpload: File;\n  selectedFiles: FileList; \n  userEntries = new UserEntries();\n  constructor(private entriesService:EntriesService,private route:Router) { }\n\n  ngOnInit() {\n   \n  }\n  selectChange(event: any) {\n    this.entriesType = event.target.value;\n\n   if (this.entriesType === \"1\"){\n    this.isText = true;\n    this.isImage = false;\n   }\n   if (this.entriesType === \"2\"){\n    this.isImage = true;\n    this.isText = false;\n   }\n\n\n  }\n  save(){\n  //alert (\"this.entriesType \" +this.entriesType+' and user'+this.userEntries.feedback);\n // alert (\"this.entriesType \" +this.entriesType+' and user'+this.userEntries.imgurl);  \n\n\n\n if (this.entriesType === \"1\"){\n  this.entriesService.saveEntries(this.userEntries).subscribe(\n    data => { // json data\n        console.log('Success: ');\n        this.route.navigate(['/viewEntries']);\n    },\n    error => {\n        console.log('Error: ', error);\n       // this.alertService.warning(\"Invalid Username or Password\") ;\n    }); \n }\n if (this.entriesType === \"2\"){\n  this.entriesService.saveEntriesForFiles(this.currentFileUpload).subscribe(\n    data => { // json data\n        console.log('Success: ');\n        this.route.navigate(['/viewEntries']);\n    },\n    error => {\n        console.log('Error: ', error);\n       // this.alertService.warning(\"Invalid Username or Password\") ;\n    });\n }\n \n\n this.route.navigate(['/viewEntries']);\n}\n\nselectFile(event) {  \n      \n  const file = event.target.files.item(0);  \n  let filename = file.name ; \n // if (file.type.match('application/vnd.ms-excel.csv')||file.type.match('application/vnd.ms-excel.*')||file.type.match('vnd.openxmlformats-officedocument.spreadsheetml.sheet')) {  \n    var size = event.target.files[0].size;  \n      this.currentFileUpload=event.target.files[0]; \n      this.selectedFiles = event.target.files;  \n     \n  //}\n} \n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddEntriesComponent } from './add-entries/add-entries.component';\nimport { EditComponent } from './edit/edit.component';\nimport { LoginGuestComponent } from './login-guest/login-guest.component';\nimport { RegisterGuestComponent } from './register-guest/register-guest.component';\nimport { ViewEntriesComponent } from './view-entries/view-entries.component';\n\nconst routes: Routes = [\n  {\n    path: '',  \n    component: LoginGuestComponent\n  },\n  {    \n  path: 'register',  \n  component: RegisterGuestComponent  \n  },\n  \n  {    \n    path: 'addEntries',  \n    component: AddEntriesComponent  \n    },\n    {    \n      path: 'viewEntries',  \n      component: ViewEntriesComponent  \n      },\n      {    \n        path: 'editEntries',  \n        component: EditComponent  \n        },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"h1 {color: brown; border: 2%; text-align: center; border-color: blueviolet; border-style: dotted;}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSSxZQUFZLEVBQUUsVUFBVSxFQUFFLGtCQUFrQixFQUFFLHdCQUF3QixFQUFFLG9CQUFvQixDQUFDIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJoMSB7Y29sb3I6IGJyb3duOyBib3JkZXI6IDIlOyB0ZXh0LWFsaWduOiBjZW50ZXI7IGJvcmRlci1jb2xvcjogYmx1ZXZpb2xldDsgYm9yZGVyLXN0eWxlOiBkb3R0ZWQ7fSJdfQ== */\"","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n  title = 'this is our angular proram';\n  months = [ \"jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  isAvailalbe = false;\n  toDo = [\"angular Training\"];\n  addItem(){\n    this.toDo.push('item1');\n  }\n  clickFunction(){\n    alert('clicked');\n  }\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginGuestComponent } from './login-guest/login-guest.component';\nimport { RegisterGuestComponent } from './register-guest/register-guest.component';\nimport { ViewEntriesComponent } from './view-entries/view-entries.component';\nimport { AddEntriesComponent } from './add-entries/add-entries.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { EditComponent } from './edit/edit.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginGuestComponent,\n    RegisterGuestComponent,\n    ViewEntriesComponent,\n    HomeComponent,\n    AddEntriesComponent,\n    EditComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQvZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EntriesService } from '../entries.service';\nimport { UserEntries } from '../model/UserEntries';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  usersEntriesEdit:UserEntries;\n  isText = false;\n  isImage = false;\n  myEntries = \"1\";\n  entriesType:any;\n \n  constructor(private route:Router,private entriesService:EntriesService ) { }\n\n  ngOnInit() {\n    if(this.entriesService.editVar!==\"0\")\n    this.getSelectedValue(this.entriesService.editVar);\n\n  }\n\n  getSelectedValue(valId){\n    this.entriesService.edit(valId).subscribe(\n      data => { // json data\n        this.usersEntriesEdit=data.data;\n        \n      },\n      error => {\n          console.log('Error: ', error);\n         // this.alertService.warning(\"Invalid Username or Password\") ;\n      });\n\n  }\n\n\n  selectChange(event: any) {\n    this.entriesType = event.target.value;\n\n   if (this.entriesType === \"1\"){\n    this.isText = true;\n    this.isImage = false;\n   }\n   if (this.entriesType === \"2\"){\n    this.isImage = true;\n    this.isText = false;\n   }\n\n\n  }\n  save(){\n    //alert (\"this.entriesType \" +this.entriesType+' and user'+this.userEntries.feedback);\n   // alert (\"this.entriesType \" +this.entriesType+' and user'+this.userEntries.imgurl);  \n  \n   this.entriesService.saveEntries(this.usersEntriesEdit).subscribe(\n    data => { // json data\n        console.log('Success: ');\n        this.route.navigate(['/viewEntries']);\n    },\n    error => {\n        console.log('Error: ', error);\n       // this.alertService.warning(\"Invalid Username or Password\") ;\n    });\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UserEntries } from './model/UserEntries';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntriesService {\n  createAPI = \"http://localhost:8080/createEntries\";\n  createAPIForFiles = \"http://localhost:8080/createEntriesForFiles\";\n  getAPI = \"http://localhost:8080/getEntriesList\";\n  approveAPI = \"http://localhost:8080/isApproveEntry\";\n  updateAPI = \"http://localhost:8080/updateEntries\";;\n  deleteAPI = \"http://localhost:8080/deleteEntries\";\n  selectedPageAPI = \"http://localhost:8080/getSelectedEntry\";\n  constructor(private http: HttpClient) { }\n  editVar=\"0\"; \n  isApprove(valId):Observable<any>{\n    const body = new HttpParams()\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Accept': '*/*' \n      })\n    };\n   return this.http.get(this.approveAPI+\"?id=\"+valId);\n\n  }\n  update(userEntries):Observable<any>{\n    const body = new HttpParams()\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Accept': '*/*' \n      })\n    };\n   return this.http.put(this.updateAPI,userEntries);\n\n  }\n\n  \n  edit(valId):Observable<any>{\n    const body = new HttpParams()\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Accept': '*/*' \n      })\n    };\n   return this.http.get(this.selectedPageAPI+\"?id=\"+valId);\n  }\n  delete(valId):Observable<any>{\n    const body = new HttpParams()\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Accept': '*/*' \n      })\n    };\n   return this.http.get(this.deleteAPI+\"?id=\"+valId);\n\n  }\n\n  getEntriesList():Observable<any>{\n     const body = new HttpParams()\n     const httpOptions = {\n       headers: new HttpHeaders({\n         'Content-Type':  'application/json',\n         'Accept': '*/*' \n       })\n     };\n    return this.http.get(this.getAPI);\n \n   }\n  saveEntries(userEntries:UserEntries):Observable<any>{\n    const body = new HttpParams()\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Accept': '*/*' \n      })\n    };\n   return this.http.post(this.createAPI,userEntries);\n}\n\n  saveEntriesForFiles(file : File):Observable<any>{\n    const formdata: FormData = new FormData();  \n    formdata.append('file', file);\n     const body = new HttpParams()\n     const httpOptions = {\n       headers: new HttpHeaders({\n         'Content-Type':  'application/json',\n         'Accept': '*/*' \n       })\n     };\n    return this.http.post(this.createAPIForFiles,formdata);\n \n   }\n }\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luLWd1ZXN0L2xvZ2luLWd1ZXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoginService } from '../login.service';\nimport { Login } from '../model/Login';\n\n@Component({\n  selector: 'app-login-guest',\n  templateUrl: './login-guest.component.html',\n  styleUrls: ['./login-guest.component.css']\n})\nexport class LoginGuestComponent implements OnInit {\n  login =  new Login();\n  constructor(private route:Router,private loginService:LoginService) { }\n\n  ngOnInit() {\n  \n  }\ngo(){\n  \n  this.route.navigate(['/register']);\n}\n\nonSubmit(form:NgForm){\n  this.loginService.signin(this.login).subscribe(\n    data => { // json data\n        console.log('Success: ', data);\n        this.route.navigate(['/viewEntries']);\n    },\n    error => {\n        console.log('Error: ', error);\n     });\n\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http'\nimport { Login } from './model/Login';\nimport { Observable } from 'rxjs';\nimport { User } from './model/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  accessToken : any ;\n  API = \"http://localhost:8080/login\";\n  registerAPI = \"http://localhost:8080/register\";\n  constructor(private http: HttpClient) { }\n  \n  signin(login:Login):Observable<any>{\n    console.log(\"geting token \"+this.API);\n    const body = new HttpParams()\n    .set('username', login.name)\n    .set('password', login.password);\n    const httpOptions = {\n      headers: new HttpHeaders({\n      'Content-Type':  'application/html',\n      'Accept': '*/*' \n      })\n      \n    };\n   return this.http.get(this.API+\"?username=\"+login.name+\"&password=\"+login.password,{ responseType: 'text' });\n\n  }\n  register(user:User):Observable<any>{\n    console.log(\"geting token \"+this.API);\n    const body = new HttpParams()\n    \n    const httpOptions = {\n      headers: new HttpHeaders({\n      \n        'Content-Type':  'application/json',\n        'Accept': '*/*' \n      })\n      \n    };\n   return this.http.post(this.registerAPI,user);\n\n  }\n}\n","export class Login{\r\n    name : string ;\r\n    password : string ;\r\n}","export class User{\r\n    userName : string ;\r\n    password : string ;\r\n    userRole : string;\r\n     id : number;\r\n\t}","export class UserEntries{\r\n    feedback : string ;\r\n    imgurl : string ;\r\n    id : number;\r\n    isApprove :number;\r\n\t\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyLWd1ZXN0L3JlZ2lzdGVyLWd1ZXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EntriesService } from '../entries.service';\nimport { LoginService } from '../login.service';\nimport { User } from '../model/User';\n\n@Component({\n  selector: 'app-register-guest',\n  templateUrl: './register-guest.component.html',\n  styleUrls: ['./register-guest.component.css']\n})\nexport class RegisterGuestComponent implements OnInit {\n  user =  new User();\n  entriesType:any;\n  constructor(private route:Router, private loginService:LoginService) { }\n\n  ngOnInit() {\n  }\n  goToLoggin(){\n    alert('clicked');\n    this.route.navigate(['']);\n  }\n\n  onSubmit(){\n    this.user.userRole=this.entriesType;\n    this.loginService.register(this.user).subscribe(\n      data => { // json data\n          console.log('Success: ', data);\n          this.route.navigate(['/viewEntries']);\n      },\n      error => {\n          console.log('Error: ', error);\n         \n      });\n  \n  }\n\n  selectChange(event: any) {\n    this.entriesType = event.target.value;\n\n   if (this.entriesType === \"1\"){\n    this.user.userRole = 'Admin';\n   }\n   if (this.entriesType === \"2\"){\n    this.user.userRole = 'user';\n    \n   }\n\n}\n  }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXctZW50cmllcy92aWV3LWVudHJpZXMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EntriesService } from '../entries.service';\nimport { UserEntries } from '../model/UserEntries';\nimport { saveAs } from 'file-saver';\n\n@Component({\n  selector: 'app-view-entries',\n  templateUrl: './view-entries.component.html',\n  styleUrls: ['./view-entries.component.css']\n})\nexport class ViewEntriesComponent implements OnInit {\n\n  constructor(private route:Router,private entriesService:EntriesService) { }\n  usersEntriesList:Array<any>=[];\n  \n  ngOnInit() {\n    //this.usersEntriesList;\n    this.entriesService.getEntriesList().subscribe(\n      data => { // json data\n          console.log('Success: '+data.Success);\n          console.log('Success: '+data.Success);\n          this.route.navigate(['/viewEntries']);\n          this.usersEntriesList=data.data;\n      },\n      error => {\n          console.log('Error: ', error);\n         // this.alertService.warning(\"Invalid Username or Password\") ;\n      });\n  }\n  go(){\n  this.route.navigate(['/addEntries']);\n  }\n  approve(valId){\n    //alert('selected id is  '+valId);\n    this.entriesService.isApprove(valId).subscribe(\n      data => { // json data\n         alert('Appoved');\n         this.route.navigate(['/viewEntries']);\n          //this.usersEntriesList=data.data;\n      },\n      error => {\n          console.log('Error: ', error);\n         // this.alertService.warning(\"Invalid Username or Password\") ;\n      });\n\n  }\n\n  update(userEntries){\n    alert('selected id is  '+userEntries.id);\n    this.entriesService.update(userEntries).subscribe(\n      data => { // json data\n         alert('Edit');\n         this.route.navigate(['/updateEntries']);\n          //this.usersEntriesList=data.data;\n      },\n      error => {\n          console.log('Error: ', error);\n         // this.alertService.warning(\"Invalid Username or Password\") ;\n      });\n\n  }\n\n  Edit(valId){\n    this.entriesService.editVar=valId;\n    alert('selected id is  '+valId);\n    this.route.navigate(['/editEntries']);\n  }\n  \n  Delete(valId){\n    alert('selected id is  '+valId);\n    this.entriesService.delete(valId).subscribe(\n      data => { // json data\n         alert('Deleted');\n         this.route.navigate(['/viewEntries']);\n          //this.usersEntriesList=data.data;\n      },\n      error => {\n          console.log('Error: ', error);\n         // this.alertService.warning(\"Invalid Username or Password\") ;\n      });\n\n  }\n  \n  downloadfile(fileName){\n    var filePath = \"D:\\\\test\\\\\"+fileName;\n    alert(\"file downloaded path is \"+filePath);\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}